Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> include using funcion_main
Rule 2     include -> INCLUDE LESS_THAN IOSTREAM GREATER_THAN
Rule 3     using -> USING NAMESPACE IDENTIFIER SEMICOLON
Rule 4     funcion_main -> INT MAIN LPAREN RPAREN LBRACE instrucciones RBRACE
Rule 5     instrucciones -> instrucciones instruccion
Rule 6     instrucciones -> instruccion
Rule 7     instruccion -> impresion
Rule 8     instruccion -> retorno
Rule 9     impresion -> COUT DOUBLE_LESS_THAN STRING SEMICOLON
Rule 10    retorno -> RETURN NUMBER SEMICOLON

Terminals, with rules where they appear

COUT                 : 9
DOUBLE_LESS_THAN     : 9
GREATER_THAN         : 2
IDENTIFIER           : 3
INCLUDE              : 2
INT                  : 4
IOSTREAM             : 2
LBRACE               : 4
LESS_THAN            : 2
LPAREN               : 4
MAIN                 : 4
NAMESPACE            : 3
NUMBER               : 10
RBRACE               : 4
RETURN               : 10
RPAREN               : 4
SEMICOLON            : 3 9 10
STRING               : 9
USING                : 3
error                : 

Nonterminals, with rules where they appear

funcion_main         : 1
impresion            : 7
include              : 1
instruccion          : 5 6
instrucciones        : 4 5
programa             : 0
retorno              : 8
using                : 1

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . include using funcion_main
    (2) include -> . INCLUDE LESS_THAN IOSTREAM GREATER_THAN

    INCLUDE         shift and go to state 3

    programa                       shift and go to state 1
    include                        shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> include . using funcion_main
    (3) using -> . USING NAMESPACE IDENTIFIER SEMICOLON

    USING           shift and go to state 5

    using                          shift and go to state 4

state 3

    (2) include -> INCLUDE . LESS_THAN IOSTREAM GREATER_THAN

    LESS_THAN       shift and go to state 6


state 4

    (1) programa -> include using . funcion_main
    (4) funcion_main -> . INT MAIN LPAREN RPAREN LBRACE instrucciones RBRACE

    INT             shift and go to state 8

    funcion_main                   shift and go to state 7

state 5

    (3) using -> USING . NAMESPACE IDENTIFIER SEMICOLON

    NAMESPACE       shift and go to state 9


state 6

    (2) include -> INCLUDE LESS_THAN . IOSTREAM GREATER_THAN

    IOSTREAM        shift and go to state 10


state 7

    (1) programa -> include using funcion_main .

    $end            reduce using rule 1 (programa -> include using funcion_main .)


state 8

    (4) funcion_main -> INT . MAIN LPAREN RPAREN LBRACE instrucciones RBRACE

    MAIN            shift and go to state 11


state 9

    (3) using -> USING NAMESPACE . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 12


state 10

    (2) include -> INCLUDE LESS_THAN IOSTREAM . GREATER_THAN

    GREATER_THAN    shift and go to state 13


state 11

    (4) funcion_main -> INT MAIN . LPAREN RPAREN LBRACE instrucciones RBRACE

    LPAREN          shift and go to state 14


state 12

    (3) using -> USING NAMESPACE IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 15


state 13

    (2) include -> INCLUDE LESS_THAN IOSTREAM GREATER_THAN .

    USING           reduce using rule 2 (include -> INCLUDE LESS_THAN IOSTREAM GREATER_THAN .)


state 14

    (4) funcion_main -> INT MAIN LPAREN . RPAREN LBRACE instrucciones RBRACE

    RPAREN          shift and go to state 16


state 15

    (3) using -> USING NAMESPACE IDENTIFIER SEMICOLON .

    INT             reduce using rule 3 (using -> USING NAMESPACE IDENTIFIER SEMICOLON .)


state 16

    (4) funcion_main -> INT MAIN LPAREN RPAREN . LBRACE instrucciones RBRACE

    LBRACE          shift and go to state 17


state 17

    (4) funcion_main -> INT MAIN LPAREN RPAREN LBRACE . instrucciones RBRACE
    (5) instrucciones -> . instrucciones instruccion
    (6) instrucciones -> . instruccion
    (7) instruccion -> . impresion
    (8) instruccion -> . retorno
    (9) impresion -> . COUT DOUBLE_LESS_THAN STRING SEMICOLON
    (10) retorno -> . RETURN NUMBER SEMICOLON

    COUT            shift and go to state 22
    RETURN          shift and go to state 23

    instrucciones                  shift and go to state 18
    instruccion                    shift and go to state 19
    impresion                      shift and go to state 20
    retorno                        shift and go to state 21

state 18

    (4) funcion_main -> INT MAIN LPAREN RPAREN LBRACE instrucciones . RBRACE
    (5) instrucciones -> instrucciones . instruccion
    (7) instruccion -> . impresion
    (8) instruccion -> . retorno
    (9) impresion -> . COUT DOUBLE_LESS_THAN STRING SEMICOLON
    (10) retorno -> . RETURN NUMBER SEMICOLON

    RBRACE          shift and go to state 24
    COUT            shift and go to state 22
    RETURN          shift and go to state 23

    instruccion                    shift and go to state 25
    impresion                      shift and go to state 20
    retorno                        shift and go to state 21

state 19

    (6) instrucciones -> instruccion .

    RBRACE          reduce using rule 6 (instrucciones -> instruccion .)
    COUT            reduce using rule 6 (instrucciones -> instruccion .)
    RETURN          reduce using rule 6 (instrucciones -> instruccion .)


state 20

    (7) instruccion -> impresion .

    RBRACE          reduce using rule 7 (instruccion -> impresion .)
    COUT            reduce using rule 7 (instruccion -> impresion .)
    RETURN          reduce using rule 7 (instruccion -> impresion .)


state 21

    (8) instruccion -> retorno .

    RBRACE          reduce using rule 8 (instruccion -> retorno .)
    COUT            reduce using rule 8 (instruccion -> retorno .)
    RETURN          reduce using rule 8 (instruccion -> retorno .)


state 22

    (9) impresion -> COUT . DOUBLE_LESS_THAN STRING SEMICOLON

    DOUBLE_LESS_THAN shift and go to state 26


state 23

    (10) retorno -> RETURN . NUMBER SEMICOLON

    NUMBER          shift and go to state 27


state 24

    (4) funcion_main -> INT MAIN LPAREN RPAREN LBRACE instrucciones RBRACE .

    $end            reduce using rule 4 (funcion_main -> INT MAIN LPAREN RPAREN LBRACE instrucciones RBRACE .)


state 25

    (5) instrucciones -> instrucciones instruccion .

    RBRACE          reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    COUT            reduce using rule 5 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 5 (instrucciones -> instrucciones instruccion .)


state 26

    (9) impresion -> COUT DOUBLE_LESS_THAN . STRING SEMICOLON

    STRING          shift and go to state 28


state 27

    (10) retorno -> RETURN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 29


state 28

    (9) impresion -> COUT DOUBLE_LESS_THAN STRING . SEMICOLON

    SEMICOLON       shift and go to state 30


state 29

    (10) retorno -> RETURN NUMBER SEMICOLON .

    RBRACE          reduce using rule 10 (retorno -> RETURN NUMBER SEMICOLON .)
    COUT            reduce using rule 10 (retorno -> RETURN NUMBER SEMICOLON .)
    RETURN          reduce using rule 10 (retorno -> RETURN NUMBER SEMICOLON .)


state 30

    (9) impresion -> COUT DOUBLE_LESS_THAN STRING SEMICOLON .

    RBRACE          reduce using rule 9 (impresion -> COUT DOUBLE_LESS_THAN STRING SEMICOLON .)
    COUT            reduce using rule 9 (impresion -> COUT DOUBLE_LESS_THAN STRING SEMICOLON .)
    RETURN          reduce using rule 9 (impresion -> COUT DOUBLE_LESS_THAN STRING SEMICOLON .)

