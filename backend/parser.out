Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> for_loop
Rule 1     for_loop -> FOR LPAREN initialization condition increment RPAREN LBRACE statement RBRACE
Rule 2     initialization -> INT IDENTIFIER EQUALS NUMBER SEMICOLON
Rule 3     initialization -> IDENTIFIER EQUALS NUMBER SEMICOLON
Rule 4     condition -> IDENTIFIER LESS_EQUAL NUMBER SEMICOLON
Rule 5     increment -> IDENTIFIER INCREMENT
Rule 6     increment -> INCREMENT IDENTIFIER
Rule 7     statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING PLUS IDENTIFIER RPAREN SEMICOLON
Rule 8     initialization -> INT NUMBER EQUALS NUMBER SEMICOLON
Rule 9     increment -> IDENTIFIER PLUS

Terminals, with rules where they appear

DOT                  : 7 7
EQUALS               : 2 3 8
FOR                  : 1
IDENTIFIER           : 2 3 4 5 6 7 9
INCREMENT            : 5 6
INT                  : 2 8
LBRACE               : 1
LESS_EQUAL           : 4
LPAREN               : 1 7
NUMBER               : 2 3 4 8 8
OUT                  : 7
PLUS                 : 7 9
PRINTLN              : 7
RBRACE               : 1
RPAREN               : 1 7
SEMICOLON            : 2 3 4 7 8
STRING               : 7
SYSTEM               : 7
error                : 

Nonterminals, with rules where they appear

condition            : 1
for_loop             : 0
increment            : 1
initialization       : 1
statement            : 1

Parsing method: LALR

state 0

    (0) S' -> . for_loop
    (1) for_loop -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement RBRACE

    FOR             shift and go to state 2

    for_loop                       shift and go to state 1

state 1

    (0) S' -> for_loop .



state 2

    (1) for_loop -> FOR . LPAREN initialization condition increment RPAREN LBRACE statement RBRACE

    LPAREN          shift and go to state 3


state 3

    (1) for_loop -> FOR LPAREN . initialization condition increment RPAREN LBRACE statement RBRACE
    (2) initialization -> . INT IDENTIFIER EQUALS NUMBER SEMICOLON
    (3) initialization -> . IDENTIFIER EQUALS NUMBER SEMICOLON
    (8) initialization -> . INT NUMBER EQUALS NUMBER SEMICOLON

    INT             shift and go to state 5
    IDENTIFIER      shift and go to state 6

    initialization                 shift and go to state 4

state 4

    (1) for_loop -> FOR LPAREN initialization . condition increment RPAREN LBRACE statement RBRACE
    (4) condition -> . IDENTIFIER LESS_EQUAL NUMBER SEMICOLON

    IDENTIFIER      shift and go to state 8

    condition                      shift and go to state 7

state 5

    (2) initialization -> INT . IDENTIFIER EQUALS NUMBER SEMICOLON
    (8) initialization -> INT . NUMBER EQUALS NUMBER SEMICOLON

    IDENTIFIER      shift and go to state 9
    NUMBER          shift and go to state 10


state 6

    (3) initialization -> IDENTIFIER . EQUALS NUMBER SEMICOLON

    EQUALS          shift and go to state 11


state 7

    (1) for_loop -> FOR LPAREN initialization condition . increment RPAREN LBRACE statement RBRACE
    (5) increment -> . IDENTIFIER INCREMENT
    (6) increment -> . INCREMENT IDENTIFIER
    (9) increment -> . IDENTIFIER PLUS

    IDENTIFIER      shift and go to state 13
    INCREMENT       shift and go to state 14

    increment                      shift and go to state 12

state 8

    (4) condition -> IDENTIFIER . LESS_EQUAL NUMBER SEMICOLON

    LESS_EQUAL      shift and go to state 15


state 9

    (2) initialization -> INT IDENTIFIER . EQUALS NUMBER SEMICOLON

    EQUALS          shift and go to state 16


state 10

    (8) initialization -> INT NUMBER . EQUALS NUMBER SEMICOLON

    EQUALS          shift and go to state 17


state 11

    (3) initialization -> IDENTIFIER EQUALS . NUMBER SEMICOLON

    NUMBER          shift and go to state 18


state 12

    (1) for_loop -> FOR LPAREN initialization condition increment . RPAREN LBRACE statement RBRACE

    RPAREN          shift and go to state 19


state 13

    (5) increment -> IDENTIFIER . INCREMENT
    (9) increment -> IDENTIFIER . PLUS

    INCREMENT       shift and go to state 20
    PLUS            shift and go to state 21


state 14

    (6) increment -> INCREMENT . IDENTIFIER

    IDENTIFIER      shift and go to state 22


state 15

    (4) condition -> IDENTIFIER LESS_EQUAL . NUMBER SEMICOLON

    NUMBER          shift and go to state 23


state 16

    (2) initialization -> INT IDENTIFIER EQUALS . NUMBER SEMICOLON

    NUMBER          shift and go to state 24


state 17

    (8) initialization -> INT NUMBER EQUALS . NUMBER SEMICOLON

    NUMBER          shift and go to state 25


state 18

    (3) initialization -> IDENTIFIER EQUALS NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 26


state 19

    (1) for_loop -> FOR LPAREN initialization condition increment RPAREN . LBRACE statement RBRACE

    LBRACE          shift and go to state 27


state 20

    (5) increment -> IDENTIFIER INCREMENT .

    RPAREN          reduce using rule 5 (increment -> IDENTIFIER INCREMENT .)


state 21

    (9) increment -> IDENTIFIER PLUS .

    RPAREN          reduce using rule 9 (increment -> IDENTIFIER PLUS .)


state 22

    (6) increment -> INCREMENT IDENTIFIER .

    RPAREN          reduce using rule 6 (increment -> INCREMENT IDENTIFIER .)


state 23

    (4) condition -> IDENTIFIER LESS_EQUAL NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 28


state 24

    (2) initialization -> INT IDENTIFIER EQUALS NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 29


state 25

    (8) initialization -> INT NUMBER EQUALS NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 30


state 26

    (3) initialization -> IDENTIFIER EQUALS NUMBER SEMICOLON .

    IDENTIFIER      reduce using rule 3 (initialization -> IDENTIFIER EQUALS NUMBER SEMICOLON .)


state 27

    (1) for_loop -> FOR LPAREN initialization condition increment RPAREN LBRACE . statement RBRACE
    (7) statement -> . SYSTEM DOT OUT DOT PRINTLN LPAREN STRING PLUS IDENTIFIER RPAREN SEMICOLON

    SYSTEM          shift and go to state 32

    statement                      shift and go to state 31

state 28

    (4) condition -> IDENTIFIER LESS_EQUAL NUMBER SEMICOLON .

    IDENTIFIER      reduce using rule 4 (condition -> IDENTIFIER LESS_EQUAL NUMBER SEMICOLON .)
    INCREMENT       reduce using rule 4 (condition -> IDENTIFIER LESS_EQUAL NUMBER SEMICOLON .)


state 29

    (2) initialization -> INT IDENTIFIER EQUALS NUMBER SEMICOLON .

    IDENTIFIER      reduce using rule 2 (initialization -> INT IDENTIFIER EQUALS NUMBER SEMICOLON .)


state 30

    (8) initialization -> INT NUMBER EQUALS NUMBER SEMICOLON .

    IDENTIFIER      reduce using rule 8 (initialization -> INT NUMBER EQUALS NUMBER SEMICOLON .)


state 31

    (1) for_loop -> FOR LPAREN initialization condition increment RPAREN LBRACE statement . RBRACE

    RBRACE          shift and go to state 33


state 32

    (7) statement -> SYSTEM . DOT OUT DOT PRINTLN LPAREN STRING PLUS IDENTIFIER RPAREN SEMICOLON

    DOT             shift and go to state 34


state 33

    (1) for_loop -> FOR LPAREN initialization condition increment RPAREN LBRACE statement RBRACE .

    $end            reduce using rule 1 (for_loop -> FOR LPAREN initialization condition increment RPAREN LBRACE statement RBRACE .)


state 34

    (7) statement -> SYSTEM DOT . OUT DOT PRINTLN LPAREN STRING PLUS IDENTIFIER RPAREN SEMICOLON

    OUT             shift and go to state 35


state 35

    (7) statement -> SYSTEM DOT OUT . DOT PRINTLN LPAREN STRING PLUS IDENTIFIER RPAREN SEMICOLON

    DOT             shift and go to state 36


state 36

    (7) statement -> SYSTEM DOT OUT DOT . PRINTLN LPAREN STRING PLUS IDENTIFIER RPAREN SEMICOLON

    PRINTLN         shift and go to state 37


state 37

    (7) statement -> SYSTEM DOT OUT DOT PRINTLN . LPAREN STRING PLUS IDENTIFIER RPAREN SEMICOLON

    LPAREN          shift and go to state 38


state 38

    (7) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN . STRING PLUS IDENTIFIER RPAREN SEMICOLON

    STRING          shift and go to state 39


state 39

    (7) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING . PLUS IDENTIFIER RPAREN SEMICOLON

    PLUS            shift and go to state 40


state 40

    (7) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING PLUS . IDENTIFIER RPAREN SEMICOLON

    IDENTIFIER      shift and go to state 41


state 41

    (7) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING PLUS IDENTIFIER . RPAREN SEMICOLON

    RPAREN          shift and go to state 42


state 42

    (7) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING PLUS IDENTIFIER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 43


state 43

    (7) statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING PLUS IDENTIFIER RPAREN SEMICOLON .

    RBRACE          reduce using rule 7 (statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING PLUS IDENTIFIER RPAREN SEMICOLON .)

