
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DOT EQUALS FOR IDENTIFIER INCREMENT INT LBRACE LESS_EQUAL LPAREN NUMBER OUT PLUS PRINTLN RBRACE RPAREN SEMICOLON STRING SYSTEMfor_loop : FOR LPAREN initialization condition increment RPAREN LBRACE statement RBRACEinitialization : INT IDENTIFIER EQUALS NUMBER SEMICOLON\n                      | IDENTIFIER EQUALS NUMBER SEMICOLONcondition : IDENTIFIER LESS_EQUAL NUMBER SEMICOLONincrement : IDENTIFIER INCREMENT\n                 | INCREMENT IDENTIFIERstatement : SYSTEM DOT OUT DOT PRINTLN LPAREN STRING PLUS IDENTIFIER RPAREN SEMICOLONinitialization : INT NUMBER EQUALS NUMBER SEMICOLONincrement : IDENTIFIER PLUS'
    
_lr_action_items = {'FOR':([0,],[2,]),'$end':([1,33,],[0,-1,]),'LPAREN':([2,37,],[3,38,]),'INT':([3,],[5,]),'IDENTIFIER':([3,4,5,7,14,26,28,29,30,40,],[6,8,9,13,22,-3,-4,-2,-8,41,]),'NUMBER':([5,11,15,16,17,],[10,18,23,24,25,]),'EQUALS':([6,9,10,],[11,16,17,]),'INCREMENT':([7,13,28,],[14,20,-4,]),'LESS_EQUAL':([8,],[15,]),'RPAREN':([12,20,21,22,41,],[19,-5,-9,-6,42,]),'PLUS':([13,39,],[21,40,]),'SEMICOLON':([18,23,24,25,42,],[26,28,29,30,43,]),'LBRACE':([19,],[27,]),'SYSTEM':([27,],[32,]),'RBRACE':([31,43,],[33,-7,]),'DOT':([32,35,],[34,36,]),'OUT':([34,],[35,]),'PRINTLN':([36,],[37,]),'STRING':([38,],[39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'for_loop':([0,],[1,]),'initialization':([3,],[4,]),'condition':([4,],[7,]),'increment':([7,],[12,]),'statement':([27,],[31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> for_loop","S'",1,None,None,None),
  ('for_loop -> FOR LPAREN initialization condition increment RPAREN LBRACE statement RBRACE','for_loop',9,'p_for_loop','app.py',9),
  ('initialization -> INT IDENTIFIER EQUALS NUMBER SEMICOLON','initialization',5,'p_initialization','app.py',14),
  ('initialization -> IDENTIFIER EQUALS NUMBER SEMICOLON','initialization',4,'p_initialization','app.py',15),
  ('condition -> IDENTIFIER LESS_EQUAL NUMBER SEMICOLON','condition',4,'p_condition','app.py',18),
  ('increment -> IDENTIFIER INCREMENT','increment',2,'p_increment','app.py',21),
  ('increment -> INCREMENT IDENTIFIER','increment',2,'p_increment','app.py',22),
  ('statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING PLUS IDENTIFIER RPAREN SEMICOLON','statement',11,'p_statement','app.py',25),
  ('initialization -> INT NUMBER EQUALS NUMBER SEMICOLON','initialization',5,'p_initialization_error','app.py',29),
  ('increment -> IDENTIFIER PLUS','increment',2,'p_increment_error','app.py',33),
]
