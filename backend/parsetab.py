
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMA DOT END EQUALS FOR IDENTIFIER INCREMENT INT LBRACE LESS_EQUAL LPAREN NUMBER OUT PLUS PRINTF PRINTLN PROGRAMA RBRACE READ RPAREN SEMICOLON STRING SYSTEMprograma : PROGRAMA IDENTIFIER LPAREN RPAREN LBRACE declaraciones instrucciones RBRACEdeclaraciones : declaraciones declaracion\n                         | declaracion\n                         | emptydeclaracion : INT IDENTIFIER lista_identificadores SEMICOLONlista_identificadores : COMA IDENTIFIER lista_identificadores\n                                 | emptyinstrucciones : instrucciones instruccion\n                         | instruccion\n                         | emptyinstruccion : lectura\n                       | asignacion\n                       | impresion\n                       | finlectura : READ IDENTIFIER SEMICOLONasignacion : IDENTIFIER EQUALS expresion SEMICOLONexpresion : IDENTIFIER PLUS IDENTIFIER\n                     | IDENTIFIER\n                     | NUMBERimpresion : PRINTF LPAREN STRING RPAREN SEMICOLONfin : END SEMICOLONempty :declaracion : INT NUMBER lista_identificadores SEMICOLONlectura : READ NUMBER SEMICOLON\n                   | READ error SEMICOLONasignacion : NUMBER EQUALS expresion SEMICOLON\n                      | IDENTIFIER EQUALS error SEMICOLONimpresion : PRINTF LPAREN error RPAREN SEMICOLONfin : END error'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,27,],[0,-1,]),'IDENTIFIER':([2,6,7,8,9,10,12,13,14,15,17,18,19,20,21,26,28,29,34,35,37,45,46,47,50,52,53,54,55,56,61,62,],[3,-22,11,-3,-4,24,11,-2,-9,-10,-11,-12,-13,-14,30,40,-8,40,-21,-29,51,-15,-24,-25,-5,-23,60,-16,-27,-26,-20,-28,]),'LPAREN':([3,22,],[4,33,]),'RPAREN':([4,48,49,],[5,57,58,]),'LBRACE':([5,],[6,]),'INT':([6,7,8,9,13,50,52,],[10,10,-3,-4,-2,-5,-23,]),'READ':([6,7,8,9,12,13,14,15,17,18,19,20,28,34,35,45,46,47,50,52,54,55,56,61,62,],[-22,21,-3,-4,21,-2,-9,-10,-11,-12,-13,-14,-8,-21,-29,-15,-24,-25,-5,-23,-16,-27,-26,-20,-28,]),'NUMBER':([6,7,8,9,10,12,13,14,15,17,18,19,20,21,26,28,29,34,35,45,46,47,50,52,54,55,56,61,62,],[-22,16,-3,-4,25,16,-2,-9,-10,-11,-12,-13,-14,31,43,-8,43,-21,-29,-15,-24,-25,-5,-23,-16,-27,-26,-20,-28,]),'PRINTF':([6,7,8,9,12,13,14,15,17,18,19,20,28,34,35,45,46,47,50,52,54,55,56,61,62,],[-22,22,-3,-4,22,-2,-9,-10,-11,-12,-13,-14,-8,-21,-29,-15,-24,-25,-5,-23,-16,-27,-26,-20,-28,]),'END':([6,7,8,9,12,13,14,15,17,18,19,20,28,34,35,45,46,47,50,52,54,55,56,61,62,],[-22,23,-3,-4,23,-2,-9,-10,-11,-12,-13,-14,-8,-21,-29,-15,-24,-25,-5,-23,-16,-27,-26,-20,-28,]),'RBRACE':([6,7,8,9,12,13,14,15,17,18,19,20,28,34,35,45,46,47,50,52,54,55,56,61,62,],[-22,-22,-3,-4,27,-2,-9,-10,-11,-12,-13,-14,-8,-21,-29,-15,-24,-25,-5,-23,-16,-27,-26,-20,-28,]),'EQUALS':([11,16,],[26,29,]),'error':([21,23,26,33,],[32,35,42,49,]),'SEMICOLON':([23,24,25,30,31,32,36,38,39,40,41,42,43,44,51,57,58,59,60,],[34,-22,-22,45,46,47,50,-7,52,-18,54,55,-19,56,-22,61,62,-6,-17,]),'COMA':([24,25,51,],[37,37,37,]),'STRING':([33,],[48,]),'PLUS':([40,],[53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([6,],[7,]),'declaracion':([6,7,],[8,13,]),'empty':([6,7,24,25,51,],[9,15,38,38,38,]),'instrucciones':([7,],[12,]),'instruccion':([7,12,],[14,28,]),'lectura':([7,12,],[17,17,]),'asignacion':([7,12,],[18,18,]),'impresion':([7,12,],[19,19,]),'fin':([7,12,],[20,20,]),'lista_identificadores':([24,25,51,],[36,39,59,]),'expresion':([26,29,],[41,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA IDENTIFIER LPAREN RPAREN LBRACE declaraciones instrucciones RBRACE','programa',8,'p_programa','combined.py',49),
  ('declaraciones -> declaraciones declaracion','declaraciones',2,'p_declaraciones','combined.py',58),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','combined.py',59),
  ('declaraciones -> empty','declaraciones',1,'p_declaraciones','combined.py',60),
  ('declaracion -> INT IDENTIFIER lista_identificadores SEMICOLON','declaracion',4,'p_declaracion','combined.py',67),
  ('lista_identificadores -> COMA IDENTIFIER lista_identificadores','lista_identificadores',3,'p_lista_identificadores','combined.py',72),
  ('lista_identificadores -> empty','lista_identificadores',1,'p_lista_identificadores','combined.py',73),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','combined.py',83),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','combined.py',84),
  ('instrucciones -> empty','instrucciones',1,'p_instrucciones','combined.py',85),
  ('instruccion -> lectura','instruccion',1,'p_instruccion','combined.py',95),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','combined.py',96),
  ('instruccion -> impresion','instruccion',1,'p_instruccion','combined.py',97),
  ('instruccion -> fin','instruccion',1,'p_instruccion','combined.py',98),
  ('lectura -> READ IDENTIFIER SEMICOLON','lectura',3,'p_lectura','combined.py',105),
  ('asignacion -> IDENTIFIER EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','combined.py',112),
  ('expresion -> IDENTIFIER PLUS IDENTIFIER','expresion',3,'p_expresion','combined.py',119),
  ('expresion -> IDENTIFIER','expresion',1,'p_expresion','combined.py',120),
  ('expresion -> NUMBER','expresion',1,'p_expresion','combined.py',121),
  ('impresion -> PRINTF LPAREN STRING RPAREN SEMICOLON','impresion',5,'p_impresion','combined.py',131),
  ('fin -> END SEMICOLON','fin',2,'p_fin','combined.py',138),
  ('empty -> <empty>','empty',0,'p_empty','combined.py',142),
  ('declaracion -> INT NUMBER lista_identificadores SEMICOLON','declaracion',4,'p_declaracion_error','combined.py',151),
  ('lectura -> READ NUMBER SEMICOLON','lectura',3,'p_lectura_error','combined.py',156),
  ('lectura -> READ error SEMICOLON','lectura',3,'p_lectura_error','combined.py',157),
  ('asignacion -> NUMBER EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion_error','combined.py',165),
  ('asignacion -> IDENTIFIER EQUALS error SEMICOLON','asignacion',4,'p_asignacion_error','combined.py',166),
  ('impresion -> PRINTF LPAREN error RPAREN SEMICOLON','impresion',5,'p_impresion_error','combined.py',174),
  ('fin -> END error','fin',2,'p_fin_error','combined.py',179),
]
